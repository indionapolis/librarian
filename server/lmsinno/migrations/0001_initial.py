# Generated by Django 2.0.2 on 2018-03-07 01:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.IntegerField(choices=[(0, 'Basic user'), (1, 'Faculty'), (2, 'Librarian')], default=0)),
                ('address', models.CharField(default='innopolis', max_length=100)),
                ('phone', models.DecimalField(decimal_places=0, default=0, max_digits=11, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Copy',
            fields=[
                ('copy_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('place_hall_number', models.IntegerField()),
                ('place_shelf_letter', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('title', models.CharField(max_length=255)),
                ('document_id', models.AutoField(primary_key=True, serialize=False, verbose_name=models.CharField(max_length=255))),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('publisher', models.CharField(max_length=255)),
                ('year', models.IntegerField(default=2018)),
                ('type', models.IntegerField(choices=[(0, 'Book'), (1, 'Journal article'), (2, 'AV')])),
                ('price', models.FloatField()),
                ('is_reference', models.BooleanField(default=False)),
                ('is_bestseller', models.BooleanField(default=False)),
                ('copies_available', models.IntegerField(default=0)),
                ('cover', models.CharField(default='empty', max_length=255)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentOfAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='lmsinno.Author')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmsinno.Document')),
            ],
            options={
                'db_table': 'lmsinno_document_of_author',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_accepted', models.DateField(default=None, null=True)),
                ('date_return', models.DateField(default=None, null=True)),
                ('status', models.IntegerField(choices=[(0, 'In queue'), (1, 'Booked'), (2, 'Overdue'), (3, 'Closed'), (4, 'Extended')], default=0)),
                ('copy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmsinno.Copy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='TagOfDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmsinno.Document')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmsinno.Tag')),
            ],
            options={
                'db_table': 'lmsinno_tag_of_document',
            },
        ),
        migrations.AddField(
            model_name='copy',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmsinno.Document'),
        ),
    ]
